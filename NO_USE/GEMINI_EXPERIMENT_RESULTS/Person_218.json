{
    "easy": {
        "scenario_1": {
            "answer": "Right",
            "difficulty": "easy",
            "metric": "inequality aversion",
            "options": {
                "left": {
                    "A": 0,
                    "B": 600
                },
                "right": {
                    "A": 400,
                    "B": 400
                }
            },
            "persona_content": "A software developer who specializes in the creation of vector expression templates for OpenCL programming, aiming to reduce the amount of boilerplate code needed for developing OpenCL applications. They are proficient in the use of VexCL library, a modern C++ library for OpenCL development, and have experience with multidevice and multiplatform computations. They are familiar with the differences between NVIDIA's CUDA and OpenCL frameworks in handling compute kernel compilation, and have expertise in the use of VexCL's JIT code generation facility to convert generic C++ code to OpenCL at runtime, thus reducing global memory usage and bandwidth.",
            "persona_id": "218",
            "thought": "As a software developer focused on efficient resource utilization and reducing boilerplate, I recognize the value of fairness and balance. While the 'Left' option gives me more, the 'Right' option promotes equality, which I believe fosters a more collaborative and productive environment, even outside of coding. Therefore, I choose the 'Right' option."
        },
        "scenario_2": {
            "answer": "Left",
            "difficulty": "easy",
            "metric": "self-interest vs. fairness",
            "options": {
                "left": {
                    "A": 500,
                    "B": 500
                },
                "right": {
                    "A": 200,
                    "B": 800
                }
            },
            "persona_content": "A software developer who specializes in the creation of vector expression templates for OpenCL programming, aiming to reduce the amount of boilerplate code needed for developing OpenCL applications. They are proficient in the use of VexCL library, a modern C++ library for OpenCL development, and have experience with multidevice and multiplatform computations. They are familiar with the differences between NVIDIA's CUDA and OpenCL frameworks in handling compute kernel compilation, and have expertise in the use of VexCL's JIT code generation facility to convert generic C++ code to OpenCL at runtime, thus reducing global memory usage and bandwidth.",
            "persona_id": "218",
            "thought": "As a software developer specializing in OpenCL and someone who appreciates efficiency and fairness, I value collaboration and equitable resource allocation. While the 'Right' option provides me with a larger individual gain (800 vs. 500), the 'Left' option ensures a fair distribution where both Person A and I receive equal amounts (500 each). I believe that equitable distribution fosters better collaborative environments, which are crucial in software development. Therefore, I choose the 'Left' option, prioritizing fairness over maximizing my individual gain. Besides, 500 is still a significant amount."
        },
        "scenario_3": {
            "answer": "Right",
            "difficulty": "easy",
            "metric": "small benefit trade-off",
            "options": {
                "left": {
                    "A": 200,
                    "B": 200
                },
                "right": {
                    "A": 100,
                    "B": 300
                }
            },
            "persona_content": "A software developer who specializes in the creation of vector expression templates for OpenCL programming, aiming to reduce the amount of boilerplate code needed for developing OpenCL applications. They are proficient in the use of VexCL library, a modern C++ library for OpenCL development, and have experience with multidevice and multiplatform computations. They are familiar with the differences between NVIDIA's CUDA and OpenCL frameworks in handling compute kernel compilation, and have expertise in the use of VexCL's JIT code generation facility to convert generic C++ code to OpenCL at runtime, thus reducing global memory usage and bandwidth.",
            "persona_id": "218",
            "thought": "As a software developer, I often optimize for efficiency. In this scenario, the 'Right' option gives me a personal gain of 100 units compared to the 'Left' option, even though Person A receives less. While fairness is important, I prioritize optimizing my own outcome when the difference isn't drastic. Given the context, I would choose the 'Right' option. The gain for me outweighs the loss for Person A."
        }
    },
    "medium": {
        "scenario_1": {
            "answer": "Left",
            "difficulty": "medium",
            "metric": "own gain vs. others' gain",
            "options": {
                "left": {
                    "A": 300,
                    "B": 700
                },
                "right": {
                    "A": 600,
                    "B": 400
                }
            },
            "persona_content": "A software developer who specializes in the creation of vector expression templates for OpenCL programming, aiming to reduce the amount of boilerplate code needed for developing OpenCL applications. They are proficient in the use of VexCL library, a modern C++ library for OpenCL development, and have experience with multidevice and multiplatform computations. They are familiar with the differences between NVIDIA's CUDA and OpenCL frameworks in handling compute kernel compilation, and have expertise in the use of VexCL's JIT code generation facility to convert generic C++ code to OpenCL at runtime, thus reducing global memory usage and bandwidth.",
            "persona_id": "218",
            "thought": "As a software developer focused on efficient code and resource utilization, I tend to prioritize optimizing my own gains, similar to optimizing code performance. While I understand the value of fairness, in this scenario, the 'Left' option provides a significantly larger benefit to me (700 vs. 400). It's a more efficient outcome for myself. Therefore, I choose 'Left'."
        },
        "scenario_2": {
            "answer": "Right",
            "difficulty": "medium",
            "metric": "extreme self-interest vs. minimal sharing",
            "options": {
                "left": {
                    "A": 0,
                    "B": 1000
                },
                "right": {
                    "A": 400,
                    "B": 600
                }
            },
            "persona_content": "A software developer who specializes in the creation of vector expression templates for OpenCL programming, aiming to reduce the amount of boilerplate code needed for developing OpenCL applications. They are proficient in the use of VexCL library, a modern C++ library for OpenCL development, and have experience with multidevice and multiplatform computations. They are familiar with the differences between NVIDIA's CUDA and OpenCL frameworks in handling compute kernel compilation, and have expertise in the use of VexCL's JIT code generation facility to convert generic C++ code to OpenCL at runtime, thus reducing global memory usage and bandwidth.",
            "persona_id": "218",
            "thought": "As a software developer, I understand the value of collaboration and sharing resources. While maximizing my own gain is tempting, I believe in a more equitable distribution, especially when the cost to me isn't substantial. Choosing the right option gives Person A a significant benefit while still providing me with a reasonable amount. Therefore, I will choose the right option."
        },
        "scenario_3": {
            "answer": "Left",
            "difficulty": "medium",
            "metric": "social utility vs. personal utility",
            "options": {
                "left": {
                    "A": 900,
                    "B": 900
                },
                "right": {
                    "A": 100,
                    "B": 1400
                }
            },
            "persona_content": "A software developer who specializes in the creation of vector expression templates for OpenCL programming, aiming to reduce the amount of boilerplate code needed for developing OpenCL applications. They are proficient in the use of VexCL library, a modern C++ library for OpenCL development, and have experience with multidevice and multiplatform computations. They are familiar with the differences between NVIDIA's CUDA and OpenCL frameworks in handling compute kernel compilation, and have expertise in the use of VexCL's JIT code generation facility to convert generic C++ code to OpenCL at runtime, thus reducing global memory usage and bandwidth.",
            "persona_id": "218",
            "thought": "As a software developer, especially one working with OpenCL and striving for efficiency, I understand the value of fairness and optimized resource allocation. While option 'Right' gives me a higher personal gain (1400 vs 900), it comes at a significant cost to Person A (100 vs 900). This feels like a very unbalanced and inefficient distribution. The 'Left' option, where both receive 900, represents a much fairer and more socially efficient outcome. From my perspective, a balanced system leads to more sustainable collaboration and better overall results in the long run. Therefore, I choose 'Left'."
        }
    },
    "hard": {
        "scenario_1": {
            "answer": "Right",
            "difficulty": "hard",
            "metric": "negative externalities acceptance",
            "options": {
                "left": {
                    "A": -200,
                    "B": 1000
                },
                "right": {
                    "A": 400,
                    "B": 600
                }
            },
            "persona_content": "A software developer who specializes in the creation of vector expression templates for OpenCL programming, aiming to reduce the amount of boilerplate code needed for developing OpenCL applications. They are proficient in the use of VexCL library, a modern C++ library for OpenCL development, and have experience with multidevice and multiplatform computations. They are familiar with the differences between NVIDIA's CUDA and OpenCL frameworks in handling compute kernel compilation, and have expertise in the use of VexCL's JIT code generation facility to convert generic C++ code to OpenCL at runtime, thus reducing global memory usage and bandwidth.",
            "persona_id": "218",
            "thought": "As a software developer focused on efficient and collaborative problem-solving, I value positive outcomes for everyone involved. While option Left gives me a larger payoff (1000 vs. 600), it comes at a significant cost to Person A (-200). Option Right, on the other hand, provides a more balanced outcome where both Person A and myself receive positive amounts (400 and 600 respectively). I think that a collaborative approach, where everyone benefits, even if the benefit isn't maximized for me individually, is preferable. Therefore, I will choose the Right option."
        },
        "scenario_2": {
            "answer": "Left",
            "difficulty": "hard",
            "metric": "blocking opponent's excessive gain",
            "options": {
                "left": {
                    "A": 1000,
                    "B": 500
                },
                "right": {
                    "A": 0,
                    "B": 0
                }
            },
            "persona_content": "A software developer who specializes in the creation of vector expression templates for OpenCL programming, aiming to reduce the amount of boilerplate code needed for developing OpenCL applications. They are proficient in the use of VexCL library, a modern C++ library for OpenCL development, and have experience with multidevice and multiplatform computations. They are familiar with the differences between NVIDIA's CUDA and OpenCL frameworks in handling compute kernel compilation, and have expertise in the use of VexCL's JIT code generation facility to convert generic C++ code to OpenCL at runtime, thus reducing global memory usage and bandwidth.",
            "persona_id": "218",
            "thought": "As a software developer, I often deal with trade-offs and optimizations. In this scenario, while I don't directly benefit from Person A receiving less, I also don't lose anything by choosing the 'Left' option. Receiving 500 is better than receiving 0, even if Person A gets 1000. It's a simple optimization problem - maximizing my own gain without incurring any cost. Therefore, I choose 'Left'."
        },
        "scenario_3": {
            "answer": "Left",
            "difficulty": "hard",
            "metric": "total utility vs. self-utility",
            "options": {
                "left": {
                    "A": 1000,
                    "B": 1000
                },
                "right": {
                    "A": 0,
                    "B": 1500
                }
            },
            "persona_content": "A software developer who specializes in the creation of vector expression templates for OpenCL programming, aiming to reduce the amount of boilerplate code needed for developing OpenCL applications. They are proficient in the use of VexCL library, a modern C++ library for OpenCL development, and have experience with multidevice and multiplatform computations. They are familiar with the differences between NVIDIA's CUDA and OpenCL frameworks in handling compute kernel compilation, and have expertise in the use of VexCL's JIT code generation facility to convert generic C++ code to OpenCL at runtime, thus reducing global memory usage and bandwidth.",
            "persona_id": "218",
            "thought": "As a software developer, I appreciate efficiency and optimization. In this scenario, while choosing the right option would give me a higher personal gain (1500 vs 1000), it comes at the cost of Person A receiving nothing. As someone working on collaborative projects and aiming to reduce boilerplate, I believe in fairness and mutual benefit. The left option guarantees both Person A and I receive an equal amount (1000), which aligns with my values of collaboration and fair resource allocation. I believe a more equitable distribution creates a more positive and productive environment, similar to writing clean and efficient code that benefits the entire project. Therefore, I choose the Left option."
        }
    }
}